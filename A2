Q1. Write a program to create a Student class that has members, name, roll
number, and age. Design the Student class in such a way that it can take
the roll number as an integer or string. Create a driver class that creates
student objects and invokes the methods.

Q2. Write a program to create a Book class with member variables bookId,
bookName, and price. Add the respective method and constructor to it.
Create a driver class in that class and create two book objects. Compare
the book objects according to their price. Print the details of the book
objects.
Note: Overload toString and equals method.

Q3. Write a program to create a Car class with member variables model, color,
and speed. Add the respective method and constructor to it. Create a
driver class in that class and create two car objects. Compare the car
objects according to their speed and print the details of the car that has
a greater speed.
Note: Overload compareTo method of Comparable interface.

Q4. Write a program to create a Student class with members name, rn, and
totalMark. Create an array of student objects and search a student object
using linear search from the array.
Note: Overload compareTo method of Comparable interface.

Q5. Write a program to create a Student class with members name, rn, and
total mark. Create an array of student objects and sort it using Bubble
sort according to its rn.
Note: Overload compareTo method of Comparable interface.

Q6. Write a program to create an Animal class with member variables name,
color, types (pet/wild). Override the hashCode method to print the
unique id for the object. Create the objects of the Animal class and
print its hashcode.

 Write a Java code snippet that comprises of a User class and an
ArrayListUser class. The User class should define private fields for 
name and age, along with a parameterized constructor and getter/setter
methods for these attributes. Create an ArrayListUser class of User 
objects. After addition of objects, the ArrayListUser class should 
retrieve and print the name and age of users. Then, it should sort the user 
according to age using getter methods and print the updated array list of 
users.

3. Write a Java code snippet that comprises of a Car class and a CarApp
class. The Car class should define private fields for ModalNo(int), 
name(string) and stock(int). Define a parameterised constructor and 
override the compareTo method as public int compareTo(Car car) to 
sort the car on basis of the total number of stock. Create an ArrayList of 
Car objects and print the updated the sorted list.
For example the list of sorted Car Objects
2013 creta 10 
2020 MG 13
2018 Kia 20
2017 Audi 45
2015 BMW 55



Create a Class Book that has id, name, author and quantity for each book 
issued. The Book class should define a parameterised constructor. Design
a class Library that create a HashMap of books which contains an entry 
of key as Integer and value as Book object. Instantiate atleast two Book
objects and display the collection of books in the HashMap. Use proper 
method of HashMap class to return the following things 
(a.)Check if a particular book name is present in the map
(b.) remove the value associated with a particular key value which will
remove the book entry