

abstract class Account {
    private int accountNumber;
    protected double balance;

    public Account(int accountNumber, double balance) {
        this.accountNumber = accountNumber;
        this.balance = balance;
    }

    public abstract void deposit(double amount);

    public abstract void withdraw(double amount);

    public void display() {
        System.out.println("Account Number: " + accountNumber);
        System.out.println("Balance: " + balance);
    }
}

class SavingsAccount extends Account {
    private double interestRate;

    public SavingsAccount(int accountNumber,double balance, double interestRate) {
        super(accountNumber, balance);
        this.interestRate = interestRate;
    }

    @Override
    public void deposit(double amount) {
        balance = balance + amount + (amount * interestRate / 100);
        System.out.println(amount + " deposit into saving account.");
    }

    @Override
    public void withdraw(double amount) {
        if (balance >= amount) {
            balance = balance - amount;
            System.out.println(amount + " withdraw from savings account.");
        }
        else {
            System.out.println("Insufficient funds in saving account.");
        }
    }
}

class CurrentAccount extends Account {
    private double overdraftLimit;

    public CurrentAccount(int accountNumber, double balance, double overdraftLimit) {
        super(accountNumber, balance);
        this.overdraftLimit = overdraftLimit;
    }

    @Override
    public void deposit(double amount) {
        balance = balance + amount;
        System.out.println(amount + " deposited into current account.");
    }

    @Override
    public void withdraw(double amount) {
        if (balance + overdraftLimit >= amount) {
            balance = balance - amount;
            System.out.println(amount + " withdrawn from current account.");
        }
        else {
            System.out.println("Withdrawal amount exceeds overdraft limit.");
        }
    }
}

public class Q7 {
    public static void main(String[] args) {
        SavingsAccount SA = new SavingsAccount(1001, 5000, 5.0);
        CurrentAccount CA = new CurrentAccount(2001, 3000, 2000);

        SA.deposit(1000);
        SA.withdraw(200);
        System.out.println();

        CA.deposit(500);
        CA.withdraw(4000);
        CA.display();
    }
}